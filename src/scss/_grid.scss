.grid {
  display: flex;

  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;

  margin: -$grid-gap-base / 2 * 1px;
  min-width: 0;

  &--inline {
    display: inline-flex;
  }

  @each $key, $values in $grid-container-attrs {
    @each $value in $values {
      &--#{$value} {
        flex-#{$key}: $value;
      }
    }
  }

  @each $key, $values in $grid-containter-va {
    @each $value in $values {
      @if ($key == justify-content) {
        &--ha-#{$value} {
          #{$key}: $value;
        }
      } @else {
        &--va-#{$value} {
          #{$key}: $value;
        }
      }
    }
  }

  @each $gap in $grid-gap {
    &--gap-#{$gap} {
      margin: $gap / -2 * 1px;

      .grid__box {
        padding: $gap / 2 * 1px;
      }
    }
  }
}

.grid__box {
  padding: $grid-gap-base / 2 * 1px;

  &--size-auto {
    max-width: 100%;
    flex: 1 1 auto;
  }

  &--pull-right {
    margin-left: auto;
  }

  &--pull-left {
    margin-right: auto;
  }

  @for $i from 1 through $columns {
    &--size-#{$i} {
      max-width: 100 / $columns * $i * 1%;
      flex: 0 0 100 / $columns * $i * 1%;
    }
  }

  @each $align-self in $grid-align-selfs {
    &--align-self-#{$align-self} {
      align-self: $align-self;
    }
  }
}

@each $breakName, $breakSize in $grid-breakpoints {
  @each $gap in $grid-gap {
    @media all and (min-width: $breakSize) {
      .grid--gap-#{$breakName}-#{$gap} {
        margin: $gap / -2 * 1px;

        .grid__box {
          padding: $gap / 2 * 1px;
        }
      }

      @each $key, $values in $grid-container-attrs {
        @each $value in $values {
          .grid--#{$key}-#{$value}-#{$breakName} {
            flex-#{$key}: $value;
          }
        }
      }

      @for $i from 1 through $columns {
        .grid__box--size-#{$breakName}-#{$i} {
          max-width: 100 / $columns * $i * 1%;
          flex: 0 0 100 / $columns * $i * 1%;
        }
      }
    }
  }
}